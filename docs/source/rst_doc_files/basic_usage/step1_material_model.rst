
Step 1: Material model
**********************

- **Step 1 (Input Data): Generate Representative Volume Element (RVE).**

    * The first step is the computational generation of an RVE of the heterogeneous material under analysis;

    * The RVE must be quadrilateral (2d) or paralelepipedic (3d);

    * The RVE must be spatially discretized in a regular (or uniform) grid of voxels, where each voxel is associated with a given material phase as illustrated below;

    |

    .. image:: ../../../schematics/doc_CRATE_spatial_discretization_file.png
       :width: 80 %
       :align: center

    |

    * The **spatial discretization file** (:code:`.rgmsh` file) that is ultimately provided to CRATE as part of the input data must be generated with `NumPy <https://numpy.org/devdocs/index.html>`_ as illustrated in the following Python (pseudo-)script:

      .. code-block:: python

         # The RVE discretization in a regular grid of voxels (2d or 3d), where each voxel
         # is associated with a given material phase, must be materialized as a NumPy ndarray
         # (2d or 3d), where each entry corresponds to a given voxel. Hence, each entry of the
         # ndarray contains the identifier (integer) of the corresponding voxel's material phase.
         # Assume that the ndarray is called `regular_grid`.
         regular_grid = ...

         # The spatial discretization file (.rgmsh) is then generated by saving the `regular_grid`
         # ndarray in binary format through the NumPy save function. Note that this appends the
         # .npy extension to the filename.
         np.save('example_rve.rgmsh', regular_grid)

         # Output: example_rve.rgmsh.npy file
